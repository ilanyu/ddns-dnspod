name: Build and Push Docker Image

on:
  push:
    branches:
      - main
    tags:
      - 'v*.*.*' # Trigger on version tags like v1.0.0
  pull_request:
    branches:
      - main

jobs:
  build-binaries-and-docker-image: # Renamed job for clarity
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    strategy:
      matrix:
        # Define target platforms for both Go build and Docker image
        include:
          - target: linux/amd64
            goos: linux
            goarch: amd64
          - target: linux/arm64
            goos: linux
            goarch: arm64
        # Add more platforms as needed:
        #  - target: linux/arm/v7
        #    goos: linux
        #    goarch: arm
        #    goarm: 7 # if GOARM is needed
        #  - target: windows/amd64
        #    goos: windows
        #    goarch: amd64

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.22' # Specify your Go version

      - name: Build Go application for ${{ matrix.target }}
        env:
          GOOS: ${{ matrix.goos }}
          GOARCH: ${{ matrix.goarch }}
          # GOARM: ${{ matrix.goarm }} # Uncomment if building for specific ARM versions like armv7
          CGO_ENABLED: 0
        run: |
          echo "Building for $GOOS/$GOARCH..."
          go build -ldflags="-s -w" -o dist/$GOOS-$GOARCH/ddns-dnspod .
          ls -l dist/$GOOS-$GOARCH/ # Verify binary exists

      - name: Set up QEMU
        if: runner.os == 'Linux' # QEMU is typically for cross-compilation on Linux runners
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        id: buildx

      - name: Login to Docker Hub
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ secrets.DOCKERHUB_USERNAME }}/ddns-dnspod # Replace with your Docker Hub username/repo
          # Add platform suffix to tags to distinguish images if building one image per platform
          # For a manifest list, you might not need platform-specific tags here if Docker Hub handles it.
          # This example assumes we are building a manifest list.
          tags: |
            type=schedule
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=sha,prefix=,suffix=,event=branch
            type=raw,value=latest,enable={{is_default_branch}}

      - name: Build and push Docker image for ${{ matrix.target }}
        uses: docker/build-push-action@v5
        with:
          context: . # The whole repo, including the 'dist' dir with compiled binaries
          file: ./Dockerfile
          build-args: |
            TARGETOS=${{ matrix.goos }}
            TARGETARCH=${{ matrix.goarch }}
          push: ${{ github.event_name != 'pull_request' }}
          tags: | # Create platform specific tags
            ${{ secrets.DOCKERHUB_USERNAME }}/ddns-dnspod:${{ steps.meta.outputs.version }}-${{ matrix.goos }}-${{ matrix.goarch }}
            ${{ secrets.DOCKERHUB_USERNAME }}/ddns-dnspod:latest-${{ matrix.goos }}-${{ matrix.goarch }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

  create-manifest:
    needs: build-binaries-and-docker-image # Depends on the previous job (all matrix instances)
    runs-on: ubuntu-latest
    if: github.event_name != 'pull_request' && (startsWith(github.ref, 'refs/tags/v') || github.ref == 'refs/heads/main')
    steps:
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Extract metadata for manifest
        id: meta_manifest
        uses: docker/metadata-action@v5
        with:
          images: ${{ secrets.DOCKERHUB_USERNAME }}/ddns-dnspod
          tags: |
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=raw,value=latest,enable={{is_default_branch}}

      - name: Create and push manifest list
        run: |
          TAGS_TO_MANIFEST=""
          for tag_base in ${{ steps.meta_manifest.outputs.tags }}; do
            echo "Processing base tag: $tag_base"
            docker manifest create --amend $tag_base \
              $tag_base-linux-amd64 \
              $tag_base-linux-arm64
            docker manifest push $tag_base
            TAGS_TO_MANIFEST="$TAGS_TO_MANIFEST $tag_base"
          done
          echo "Manifests created and pushed for tags:$TAGS_TO_MANIFEST"
